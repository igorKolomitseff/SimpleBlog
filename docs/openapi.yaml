openapi: 3.0.3
info:
  title: SIMPLE BLOG API
  version: 1.0.0
  description: Simple blog for test task
paths:
  /api/articles/:
    get:
      operationId: articles_list
      parameters:
      - in: query
        name: is_published
        schema:
          type: boolean
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - articles
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedArticleReadList'
          description: ''
    post:
      operationId: articles_create
      tags:
      - articles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArticleWrite'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ArticleWrite'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ArticleWrite'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArticleWrite'
          description: ''
  /api/articles/{id}/:
    get:
      operationId: articles_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Статья.
        required: true
      tags:
      - articles
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArticleRead'
          description: ''
    put:
      operationId: articles_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Статья.
        required: true
      tags:
      - articles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArticleWrite'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ArticleWrite'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ArticleWrite'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArticleWrite'
          description: ''
    patch:
      operationId: articles_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Статья.
        required: true
      tags:
      - articles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedArticleWrite'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedArticleWrite'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedArticleWrite'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArticleWrite'
          description: ''
    delete:
      operationId: articles_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Статья.
        required: true
      tags:
      - articles
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/auth/jwt/create/:
    post:
      operationId: auth_jwt_create_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /api/auth/jwt/refresh/:
    post:
      operationId: auth_jwt_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/auth/jwt/verify/:
    post:
      operationId: auth_jwt_verify_create
      description: |-
        Takes a token and indicates if it is valid.  This view provides no
        information about a token's fitness for a particular use.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenVerify'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenVerify'
          description: ''
  /api/auth/register/:
    post:
      operationId: auth_register_create
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserCreate'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCreate'
          description: ''
  /api/tags/:
    get:
      operationId: tags_list
      tags:
      - tags
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tag'
          description: ''
  /api/tags/{id}/:
    get:
      operationId: tags_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Тег.
        required: true
      tags:
      - tags
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          description: ''
components:
  schemas:
    ArticleRead:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        author:
          allOf:
          - $ref: '#/components/schemas/UserRead'
          readOnly: true
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
        title:
          type: string
          title: Заголовок статьи
          maxLength: 100
        content:
          type: string
          title: Текст статьи
        created_at:
          type: string
          format: date-time
          readOnly: true
          title: Добавлено
        is_published:
          type: boolean
          title: Опубликовано
      required:
      - author
      - content
      - created_at
      - id
      - tags
      - title
    ArticleWrite:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        author:
          allOf:
          - $ref: '#/components/schemas/UserRead'
          readOnly: true
        tags:
          type: array
          items:
            type: integer
        title:
          type: string
          title: Заголовок статьи
          maxLength: 100
        content:
          type: string
          title: Текст статьи
        created_at:
          type: string
          format: date-time
          readOnly: true
          title: Добавлено
        is_published:
          type: boolean
          title: Опубликовано
      required:
      - author
      - content
      - created_at
      - id
      - tags
      - title
    PaginatedArticleReadList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ArticleRead'
    PatchedArticleWrite:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        author:
          allOf:
          - $ref: '#/components/schemas/UserRead'
          readOnly: true
        tags:
          type: array
          items:
            type: integer
        title:
          type: string
          title: Заголовок статьи
          maxLength: 100
        content:
          type: string
          title: Текст статьи
        created_at:
          type: string
          format: date-time
          readOnly: true
          title: Добавлено
        is_published:
          type: boolean
          title: Опубликовано
    Tag:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Название тега
          maxLength: 50
      required:
      - id
      - name
    TokenObtainPair:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - password
      - refresh
      - username
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          writeOnly: true
      required:
      - access
      - refresh
    TokenVerify:
      type: object
      properties:
        token:
          type: string
          writeOnly: true
      required:
      - token
    UserCreate:
      type: object
      properties:
        email:
          type: string
          format: email
          title: Адрес электронной почты
          maxLength: 254
        username:
          type: string
          title: Имя пользователя
          description: Обязательное поле. Не более 150 символов. Только буквы, цифры
            и символы @/./+/-/_.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        id:
          type: integer
          readOnly: true
        password:
          type: string
          writeOnly: true
      required:
      - id
      - password
      - username
    UserRead:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          title: Имя пользователя
          description: Обязательное поле. Не более 150 символов. Только буквы, цифры
            и символы @/./+/-/_.
          pattern: ^[\w.@+-]+$
          maxLength: 150
      required:
      - id
      - username
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
